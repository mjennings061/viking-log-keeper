# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel build setuptools flake8
        python -m playwright install

    - name: Build
      run: python -m build

    - name: Build and install package
      run: python -m pip install dist/*.whl

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Create secrets.toml file
      run: |
        echo 'auth_password = "${{ secrets.AUTH_PASSWORD }}"' >> .streamlit/secrets.toml

    # TODO: Add deployment step to deploy streamlit app on current commit to public URL.continue-on-error: 
    - name: Deploy streamlit app
      uses: streamlit/streamlit-app-action@v0.0.3
      with:
        app-path: "src/dashboard/main.py"
        ruff: true

    - name: Run Playwright tests
      env:
        DASHBOARD_USERNAME: ${{ secrets.DASHBOARD_USERNAME }}
        DASHBOARD_PASSWORD: ${{ secrets.DASHBOARD_PASSWORD }}
      run: pytest test/test_dashboard.py
